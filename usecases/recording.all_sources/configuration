# This is the "one-and-only" configuration for OpenDaVINCI.
# Its format is like:
#
# section.key=value
#
# If you have several modules of the same type, the following configuration
# scheme applies:
#
# global.key=value # <-- This configuration applies for all modules.
#
# section.key=value # <-- This configuration applies for all modules of type "section".
#
# section:ID.key=value # <-- This configuration applies for the module "ID" of type "section".


###############################################################################
###############################################################################
#
# GLOBAL CONFIGURATION
#

# The following attributes define the buffer sizes for recording and
# replaying. You need to adjust these parameters depending on the
# camera resolution for example (640x480x3 --> 1000000 for memorySegment,
# 1280x720x3 --> 2800000).
global.buffer.memorySegmentSize = 2800000 # Size of a memory segment in bytes.
global.buffer.numberOfMemorySegments = 20 # Number of memory segments.

# The following key describes the list of modules expected to participate in this --cid session.
global.session.expectedModules = odrecorderh264,proxy-camera:1,proxy-camera:2,proxy-camera:3,proxy-camera:4,proxy-camera:5


###############################################################################
###############################################################################
#
# NEXT, THE CONFIGURATION FOR OpenDaVINCI TOOLS FOLLOWS. 
#
###############################################################################
###############################################################################
#
# CONFIGURATION FOR ODSUPERCOMPONENT
#

# If the managed level is pulse_shift, all connected modules will be informed
# about the supercomponent's real time by this increment per module. Thus, the
# execution times per modules are better aligned with supercomponent and the
# data exchange is somewhat more predictable.
odsupercomponent.pulseshift.shift = 10000 # (in microseconds)

# If the managed level is pulse_time_ack, this is the timeout for waiting for
# an ACK message from a connected client.
odsupercomponent.pulsetimeack.timeout = 5000 # (in milliseconds)

# If the managed level is pulse_time_ack, the modules are triggered sequentially
# by sending pulses and waiting for acknowledgment messages. To allow the modules
# to deliver their respective containers, this yielding time is used to sleep
# before supercomponent sends the pulse messages the next module in this execution
# cycle. This value needs to be adjusted for networked simulations to ensure
# deterministic execution. 
odsupercomponent.pulsetimeack.yield = 5000 # (in microseconds)

# List of modules (without blanks) that will not get a pulse message from odsupercomponent.
odsupercomponent.pulsetimeack.exclude = odcockpit

###############################################################################
###############################################################################
#
# HEALTH
#
health.script = ./checkHealth.sh
health.sleep = 60 

###############################################################################
###############################################################################
#
# CONFIGURATION FOR ODPLAYER
#
odplayer.input = file://recorder.rec
odplayer.autoRewind = 0 # 0 = no rewind in the case of EOF, 1 = rewind.
odplayer.remoteControl = 0 # 0 = no remote control, 1 = allowing remote control (i.e. play, pause, rewind, step_forward)
odplayer.timeScale = 1.0 # A time scale factor of 1.0 means real time, a factor of 0 means as fast as possible. The smaller the time scale factor is the faster runs the replay.

odplayerh264.input = file://recorder.rec
odplayerh264.autoRewind = 0 # 0 = no rewind in the case of EOF, 1 = rewind.
odplayerh264.remoteControl = 0 # 0 = no remote control, 1 = allowing remote control (i.e. play, pause, rewind, step_forward)
odplayerh264.timeScale = 1.0 # A time scale factor of 1.0 means real time, a factor of 0 means as fast as possible. The smaller the time scale factor is the faster runs the replay.
odplayerh264.portbaseforchildprocesses = 28000 # Every spawned child processes is connecting to the parent process via TCP using the base port plus its increasing ID.


###############################################################################
###############################################################################
#
# CONFIGURATION FOR ODRECORDER
#
#odrecorder.output = file://recorder.rec
odrecorder.remoteControl = 0 # 0 = no remote control, 1 = allowing remote control (i.e. start and stop recording)
odrecorder.dumpSharedData = 1 # 0 = do not dump shared images and shared images, 1 = otherwise

#odrecorderh264.output = file://recorder.rec
odrecorderh264.remoteControl = 0 # 0 = no remote control, 1 = allowing remote control (i.e. start and stop recording)
odrecorderh264.dumpSharedData = 1 # 0 = do not dump shared images and shared images, 1 = otherwise
odrecorderh264.lossless = 1 # Set to 1 to enable h264 lossless encoding.
odrecorderh264.portbaseforchildprocesses = 29000 # Every spawned child processes is connecting to the parent process via TCP using the base port plus its increasing ID.

###############################################################################
###############################################################################
#
# CONFIGURATION FOR PROXY
#

### Documentation camera
proxy-camera:0.camera.debug = 0       # 1 = show recording (requires X11), 0 = otherwise.
proxy-camera:0.camera.name = DocumentationCamera0
proxy-camera:0.camera.id = 0          # Select here the proper ID for OpenCV.
proxy-camera:0.camera.width = 640
proxy-camera:0.camera.height = 480
proxy-camera:0.camera.bpp = 3
proxy-camera:0.camera.flipped = 1     # 1 = flipped image, 0 = not flipped image.

proxy-camera-axis.debug = 0       # 1 = show recording (requires X11), 0 = otherwise.
proxy-camera-axis.name = AxisCamera0

proxy-camera-axis:0.debug = 0               # 1 = show recording (requires X11), 0 = otherwise.
proxy-camera-axis:0.name = front-left
proxy-camera-axis:0.address = 10.42.42.90
proxy-camera-axis:0.username = root
proxy-camera-axis:0.password = gcdc
proxy-camera-axis:0.width = 1280
proxy-camera-axis:0.height = 720
#proxy-camera-axis:0.calibrationfile = /opt/opendlv.core.configuration/file.yml  # This file must be accessible from within the Docker container.

proxy-camera-axis:1.debug = 0               # 1 = show recording (requires X11), 0 = otherwise.
proxy-camera-axis:1.name = front-right
proxy-camera-axis:1.address = 10.42.42.91
proxy-camera-axis:1.username = root
proxy-camera-axis:1.password = gcdc
proxy-camera-axis:1.width = 1280
proxy-camera-axis:1.height = 720
#proxy-camera-axis:1.calibrationfile = /opt/opendlv.core.configuration/file.yml  # This file must be accessible from within the Docker container.

proxy-camera-axis:2.debug = 0               # 1 = show recording (requires X11), 0 = otherwise.
proxy-camera-axis:2.name = rear-right
proxy-camera-axis:2.address = 10.42.42.92
proxy-camera-axis:2.username = root
proxy-camera-axis:2.password = gcdc
proxy-camera-axis:2.width = 1280
proxy-camera-axis:2.height = 720
#proxy-camera-axis:2.calibrationfile = /opt/opendlv.core.configuration/file.yml  # This file must be accessible from within the Docker container.

proxy-camera-axis:3.debug = 0               # 1 = show recording (requires X11), 0 = otherwise.
proxy-camera-axis:3.type = opencv-ip-axis
proxy-camera-axis:3.name = rear-left
proxy-camera-axis:3.address = 10.42.42.93
proxy-camera-axis:3.username = root
proxy-camera-axis:3.password = gcdc
proxy-camera-axis:3.width = 1280
proxy-camera-axis:3.height = 720
#proxy-camera-axis:3.calibrationfile = /opt/opendlv.core.configuration/file.yml  # This file must be accessible from within the Docker container.


###############################################################################
#
# CONFIGURATION FOR proxy-fh16
#
proxy-fh16.devicenode = /dev/pcan2  # PEAK CAN device.
proxy-fh16.record_gcm = 1           # 1 = dump generic CAN messages.
proxy-fh16.record_mapped_data = 1   # 1 = record mapped containers.

###############################################################################
#
# CONFIGURATION FOR proxy-sick
#

proxy-sick.type = sick
proxy-sick.port = /dev/ttyS1
proxy-sick.baudrate = 9600
proxy-sick.mount.x = 1.25
proxy-sick.mount.y = 0.0
proxy-sick.mount.z = 1.0
proxy-sick.mount.roll = 0.0
proxy-sick.mount.pitch = 0.0
proxy-sick.mount.yaw = 0.0
proxy-sick.record = 1  # Set to 1 to dump Lidar data in .rec format.


###############################################################################
#
# CONFIGURATION FOR proxy-trimble
#
proxy-trimble.ip = 10.42.42.112    # Change to Trimble IP.
proxy-trimble.port = 9999          # Change to Trimble TCP port.
proxy-trimble.debug = 0

###############################################################################
#
# CONFIGURATION FOR proxy-v2v
#

proxy-v2v.comboxIp = 10.42.42.61
proxy-v2v.comboxPort = 5003
proxy-v2v.listenPort = 5000
proxy-v2v.debug = 0

